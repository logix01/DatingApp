package freecell.generator;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import freecell.generator.Contacts;
import freecell.generator.Account;
import freecell.generator.Rooms;
import freecell.generator.RoomsParticipants;
import freecell.generator.UserTracking;

import freecell.generator.ContactsDao;
import freecell.generator.AccountDao;
import freecell.generator.RoomsDao;
import freecell.generator.RoomsParticipantsDao;
import freecell.generator.UserTrackingDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig contactsDaoConfig;
    private final DaoConfig accountDaoConfig;
    private final DaoConfig roomsDaoConfig;
    private final DaoConfig roomsParticipantsDaoConfig;
    private final DaoConfig userTrackingDaoConfig;

    private final ContactsDao contactsDao;
    private final AccountDao accountDao;
    private final RoomsDao roomsDao;
    private final RoomsParticipantsDao roomsParticipantsDao;
    private final UserTrackingDao userTrackingDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        contactsDaoConfig = daoConfigMap.get(ContactsDao.class).clone();
        contactsDaoConfig.initIdentityScope(type);

        accountDaoConfig = daoConfigMap.get(AccountDao.class).clone();
        accountDaoConfig.initIdentityScope(type);

        roomsDaoConfig = daoConfigMap.get(RoomsDao.class).clone();
        roomsDaoConfig.initIdentityScope(type);

        roomsParticipantsDaoConfig = daoConfigMap.get(RoomsParticipantsDao.class).clone();
        roomsParticipantsDaoConfig.initIdentityScope(type);

        userTrackingDaoConfig = daoConfigMap.get(UserTrackingDao.class).clone();
        userTrackingDaoConfig.initIdentityScope(type);

        contactsDao = new ContactsDao(contactsDaoConfig, this);
        accountDao = new AccountDao(accountDaoConfig, this);
        roomsDao = new RoomsDao(roomsDaoConfig, this);
        roomsParticipantsDao = new RoomsParticipantsDao(roomsParticipantsDaoConfig, this);
        userTrackingDao = new UserTrackingDao(userTrackingDaoConfig, this);

        registerDao(Contacts.class, contactsDao);
        registerDao(Account.class, accountDao);
        registerDao(Rooms.class, roomsDao);
        registerDao(RoomsParticipants.class, roomsParticipantsDao);
        registerDao(UserTracking.class, userTrackingDao);
    }
    
    public void clear() {
        contactsDaoConfig.getIdentityScope().clear();
        accountDaoConfig.getIdentityScope().clear();
        roomsDaoConfig.getIdentityScope().clear();
        roomsParticipantsDaoConfig.getIdentityScope().clear();
        userTrackingDaoConfig.getIdentityScope().clear();
    }

    public ContactsDao getContactsDao() {
        return contactsDao;
    }

    public AccountDao getAccountDao() {
        return accountDao;
    }

    public RoomsDao getRoomsDao() {
        return roomsDao;
    }

    public RoomsParticipantsDao getRoomsParticipantsDao() {
        return roomsParticipantsDao;
    }

    public UserTrackingDao getUserTrackingDao() {
        return userTrackingDao;
    }

}
